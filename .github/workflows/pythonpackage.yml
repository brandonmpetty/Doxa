name: Python Package

on:
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Bindings/Python
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: |
        python copy-cpp-files.py
        pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: Bindings/Python/dist/*.tar.gz


  build_wheels:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./Bindings/Python

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build setup
      run: |
        python copy-cpp-files.py
        pip install -r requirements.txt
        python -m pip install cibuildwheel==2.22.0

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: Bindings/Python/wheelhouse/*.whl
        name: dist-${{ matrix.os }}

  upload_all:
    name: Upload to PyPi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
